-- UI Library

local UI = {}

-- Window

function UI.Window(title, size)
    local window = Instance.new("ScreenGui")
    window.Name = "Window"
    window.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame")
    frame.Name = "Frame"
    frame.Size = UDim2.new(0, size.X, 0, size.Y)
    frame.Position = UDim2.new(0.5, -size.X / 2, 0.5, -size.Y / 2)
    frame.BackgroundColor3 = Color3.new(0, 0, 0)
    frame.BackgroundTransparency = 0.5
    frame.Parent = window

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Text = title
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.BackgroundColor3 = Color3.new(0, 0, 0)
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.Parent = frame

    return window, frame, titleLabel
end

-- Tab

function UI.Tab(name, parent)
    local tab = Instance.new("Frame")
    tab.Name = "Tab"
    tab.Size = UDim2.new(1, 0, 1, -30)
    tab.Position = UDim2.new(0, 0, 0, 30)
    tab.BackgroundTransparency = 1
    tab.Visible = false
    tab.Parent = parent

    local button = Instance.new("TextButton")
    button.Name = "Button"
    button.Text = name
    button.Size = UDim2.new(0, 100, 0, 30)
    button.BackgroundColor3 = Color3.new(0, 0, 0)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Parent = parent:WaitForChild("Frame")

    button.MouseButton1Click:Connect(function()
        for _, child in ipairs(parent:GetChildren()) do
            if child:IsA("Frame") and child.Name == "Tab" then
                child.Visible = false
            end
        end
        tab.Visible = true
    end)

    return tab, button
end

-- Button

function UI.Button(text, parent, callback)
    local button = Instance.new("TextButton")
    button.Name = "Button"
    button.Text = text
    button.Size = UDim2.new(1, 0, 0, 30)
    button.BackgroundColor3 = Color3.new(0, 0, 0)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Parent = parent

    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    return button
end

-- Toggle

function UI.Toggle(text, parent, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = "ToggleFrame"
    toggleFrame.Size = UDim2.new(1, 0, 0, 30)
    toggleFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    toggleFrame.Parent = parent

    local toggleText = Instance.new("TextLabel")
    toggleText.Name = "ToggleText"
    toggleText.Text = text
    toggleText.Size = UDim2.new(0.7, 0, 1, 0)
    toggleText.Position = UDim2.new(0, 0, 0, 0)
    toggleText.BackgroundColor3 = Color3.new(0, 0, 0)
    toggleText.TextColor3 = Color3.new(1, 1, 1)
    toggleText.Parent = toggleFrame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Text = ""
    toggleButton.Size = UDim2.new(0.3, 0, 1, 0)
    toggleButton.Position = UDim2.new(0.7, 0, 0, 0)
    toggleButton.BackgroundColor3 = Color3.new(0, 0, 0)
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.Parent = toggleFrame

    local toggleValue = false

    toggleButton.MouseButton1Click:Connect(function()
        toggleValue = not toggleValue
        if toggleValue then
            toggleButton.BackgroundColor3 = Color3.new(0, 1, 0)
        else
            toggleButton.BackgroundColor3 = Color3.new(1, 0, 0)
        end

        if callback then
            callback(toggleValue)
        end
    end)

    return toggleValue, toggleFrame, toggleText, toggleButton
end

-- Slider

function UI.Slider(text, minValue, maxValue, startValue, parent, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = "SliderFrame"
    sliderFrame.Size = UDim2.new(1, 0, 0, 30)
    sliderFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    sliderFrame.Parent = parent

    local sliderText = Instance.new("TextLabel")
    sliderText.Name = "SliderText"
    sliderText.Text = text .. ": " .. startValue
    sliderText.Size = UDim2.new(0.4, 0, 1, 0)
    sliderText.Position = UDim2.new(0, 0, 0, 0)
    sliderText.BackgroundColor3 = Color3.new(0, 0, 0)
    sliderText.TextColor3 = Color3.new(1, 1, 1)
    sliderText.Parent = sliderFrame

    local sliderValue = startValue

    local sliderBar = Instance.new("Frame")
    sliderBar.Name = "SliderBar"
    sliderBar.Size = UDim2.new(0.6, 0, 0, 5)
    sliderBar.Position = UDim2.new(0.4, 0, 0.5, -2.5)
    sliderBar.BackgroundColor3 = Color3.new(1, 1, 1)
    sliderBar.Parent = sliderFrame

    local sliderButton = Instance.new("TextButton")
    sliderButton.Name = "SliderButton"
    sliderButton.Text = ""
    sliderButton.Size = UDim2.new(0, 10, 0, 20)
    sliderButton.Position = UDim2.new((startValue - minValue) / (maxValue - minValue), -5, 0.5, -10)
    sliderButton.BackgroundColor3 = Color3.new(0, 0, 0)
    sliderButton.TextColor3 = Color3.new(1, 1, 1)
    sliderButton.Parent = sliderFrame

    local dragStartX = 0
    local dragStartPos = 0

    local function updateSlider()
        sliderButton.Position = UDim2.new((sliderValue - minValue) / (maxValue - minValue), -5, 0.5, -10)
        sliderText.Text = text .. ": " .. sliderValue
        if callback then
            callback(sliderValue)
        end
    end

    sliderButton.MouseButton1Down:Connect(function(x, y)
        dragStartX = x
        dragStartPos = sliderButton.Position.X.Offset
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and game:GetService("UserInputService"):IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
            local delta = input.Position.X - dragStartX
            local newPos = math.clamp(dragStartPos + delta, 0, sliderFrame.AbsoluteSize.X - sliderButton.Size.X.Offset)
            local ratio = newPos / (sliderFrame.AbsoluteSize.X - sliderButton.Size.X.Offset)
            sliderValue = minValue + (maxValue - minValue) * ratio
            updateSlider()
        end
    end)

    return sliderValue, sliderFrame, sliderText, sliderButton
end

-- Dropdown

function UI.Dropdown(options, parent, callback)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Name = "DropdownFrame"
    dropdownFrame.Size = UDim2.new(1, 0, 0, 30)
    dropdownFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    dropdownFrame.Parent = parent

    local dropdownText = Instance.new("TextLabel")
    dropdownText.Name = "DropdownText"
    dropdownText.Text = options[1]
    dropdownText.Size = UDim2.new(0.8, 0, 1, 0)
    dropdownText.Position = UDim2.new(0, 0, 0, 0)
    dropdownText.BackgroundColor3 = Color3.new(0, 0, 0)
    dropdownText.TextColor3 = Color3.new(1, 1, 1)
    dropdownText.Parent = dropdownFrame

    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Name = "DropdownButton"
    dropdownButton.Text = "â–¼"
    dropdownButton.Size = UDim2.new(0.2, 0, 1, 0)
    dropdownButton.Position = UDim2.new(0.8, 0, 0, 0)
    dropdownButton.BackgroundColor3 = Color3.new(0, 0, 0)
    dropdownButton.TextColor3 = Color3.new(1, 1, 1)
    dropdownButton.Parent = dropdownFrame

    local dropdownOpen = false

    local dropdownList = Instance.new("Frame")
    dropdownList.Name = "DropdownList"
    dropdownList.Size = UDim2.new(1, 0, 0, 0)
    dropdownList.Position = UDim2.new(0, 0, 1, 0)
    dropdownList.BackgroundColor3 = Color3.new(0, 0, 0)
    dropdownList.Visible = false
    dropdownList.Parent = dropdownFrame

    for _, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Name = "OptionButton"
        optionButton.Text = option
        optionButton.Size = UDim2.new(1, 0, 0, 30)
        optionButton.BackgroundColor3 = Color3.new(0, 0, 0)
        optionButton.TextColor3 = Color3.new(1, 1, 1)
        optionButton.Parent = dropdownList

        optionButton.MouseButton1Click:Connect(function()
            dropdownText.Text = option
            dropdownOpen = false
            dropdownList.Visible = false
            if callback then
                callback(option)
            end
        end)
    end

    dropdownButton.MouseButton1Click:Connect(function()
        dropdownOpen = not dropdownOpen
        if dropdownOpen then
            dropdownList.Visible = true
        else
            dropdownList.Visible = false
        end
    end)

    return dropdownText, dropdownFrame, dropdownButton, dropdownList
end

-- Colorpicker

function UI.Colorpicker(text, parent, callback)
    local colorpickerFrame = Instance.new("Frame")
    colorpickerFrame.Name = "ColorpickerFrame"
    colorpickerFrame.Size = UDim2.new(1, 0, 0, 30)
    colorpickerFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    colorpickerFrame.Parent = parent

    local colorpickerText = Instance.new("TextLabel")
    colorpickerText.Name = "ColorpickerText"
    colorpickerText.Text = text
    colorpickerText.Size = UDim2.new(0.8, 0, 1, 0)
    colorpickerText.Position = UDim2.new(0, 0, 0, 0)
    colorpickerText.BackgroundColor3 = Color3.new(0, 0, 0)
    colorpickerText.TextColor3 = Color3.new(1, 1, 1)
    colorpickerText.Parent = colorpickerFrame

    local colorpickerButton = Instance.new("TextButton")
    colorpickerButton.Name = "ColorpickerButton"
    colorpickerButton.Text = ""
    colorpickerButton.Size = UDim2.new(0.2, 0, 1, 0)
    colorpickerButton.Position = UDim2.new(0.8, 0, 0, 0)
    colorpickerButton.BackgroundColor3 = Color3.new(0, 0, 0)
    colorpickerButton.TextColor3 = Color3.new(1, 1, 1)
    colorpickerButton.Parent = colorpickerFrame

    local selectedColor = Color3.new(1, 1, 1)

    colorpickerButton.MouseButton1Click:Connect(function()
        local colorPicker = game:GetService("CoreGui"):FindFirstChild("ColorPicker")
        if not colorPicker then
            colorPicker = Instance.new("ColorPicker")
            colorPicker.Name = "ColorPicker"
            colorPicker.Parent = game:GetService("CoreGui")
        end
        colorPicker.Visible = true
        colorPicker.Color = selectedColor

        colorPicker.ColorChanged:Connect(function(color)
            selectedColor = color
            colorpickerButton.BackgroundColor3 = selectedColor
            if callback then
                callback(selectedColor)
            end
        end)
    end)

    return selectedColor, colorpickerFrame, colorpickerText, colorpickerButton
end

-- Textbox

function UI.Textbox(text, parent, callback)
    local textboxFrame = Instance.new("Frame")
    textboxFrame.Name = "TextboxFrame"
    textboxFrame.Size = UDim2.new(1, 0, 0, 30)
    textboxFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    textboxFrame.Parent = parent

    local textboxLabel = Instance.new("TextLabel")
    textboxLabel.Name = "TextboxLabel"
    textboxLabel.Text = text
    textboxLabel.Size = UDim2.new(0.3, 0, 1, 0)
    textboxLabel.Position = UDim2.new(0, 0, 0, 0)
    textboxLabel.BackgroundColor3 = Color3.new(0, 0, 0)
    textboxLabel.TextColor3 = Color3.new(1, 1, 1)
    textboxLabel.Parent = textboxFrame

    local textboxBox = Instance.new("TextBox")
    textboxBox.Name = "TextboxBox"
    textboxBox.Text = ""
    textboxBox.Size = UDim2.new(0.7, 0, 1, 0)
    textboxBox.Position = UDim2.new(0.3, 0, 0, 0)
    textboxBox.BackgroundColor3 = Color3.new(1, 1, 1)
    textboxBox.TextColor3 = Color3.new(0, 0, 0)
    textboxBox.Parent = textboxFrame

    local textBoxValue = ""

    textboxBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            textBoxValue = textboxBox.Text
            if callback then
                callback(textBoxValue)
            end
        end
    end)

    return textBoxValue, textboxFrame, textboxLabel, textboxBox
end

-- Bind

function UI.Bind(text, parent, callback)
    local bindFrame = Instance.new("Frame")
    bindFrame.Name = "BindFrame"
    bindFrame.Size = UDim2.new(1, 0, 0, 30)
    bindFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    bindFrame.Parent = parent

    local bindLabel = Instance.new("TextLabel")
    bindLabel.Name = "BindLabel"
    bindLabel.Text = text
    bindLabel.Size = UDim2.new(0.4, 0, 1, 0)
    bindLabel.Position = UDim2.new(0, 0, 0, 0)
    bindLabel.BackgroundColor3 = Color3.new(0, 0, 0)
    bindLabel.TextColor3 = Color3.new(1, 1, 1)
    bindLabel.Parent = bindFrame

    local bindButton = Instance.new("TextButton")
    bindButton.Name = "BindButton"
    bindButton.Text = "Click to bind"
    bindButton.Size = UDim2.new(0.6, 0, 1, 0)
    bindButton.Position = UDim2.new(0.4, 0, 0, 0)
    bindButton.BackgroundColor3 = Color3.new(0, 0, 0)
    bindButton.TextColor3 = Color3.new(1, 1, 1)
    bindButton.Parent = bindFrame

    local bindKeyCode = nil

    bindButton.MouseButton1Click:Connect(function()
        bindButton.Text = "Press any key..."
        bindKeyCode = nil

        local inputBeganConn = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                bindKeyCode = input.KeyCode
                bindButton.Text = input.KeyCode.Name
                inputBeganConn:Disconnect()
                if callback then
                    callback(bindKeyCode)
                end
            end
        end)
    end)

    return bindKeyCode, bindFrame, bindLabel, bindButton
end

-- Label

function UI.Label(text, parent)
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Text = text
    label.Size = UDim2.new(1, 0, 0, 30)
    label.BackgroundColor3 = Color3.new(0, 0, 0)
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Parent = parent

    return label
end

return UI
