local UI = {}

-- Window

function UI.Window(title, size)
    local window = Instance.new("ScreenGui")
    window.Name = "Window"
    window.ResetOnSpawn = false
    window.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = size or UDim2.new(0, 300, 0, 200)
    mainFrame.Position = UDim2.new(0.5, -(mainFrame.Size.X.Offset / 2), 0.5, -(mainFrame.Size.Y.Offset / 2))
    mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = window

    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Text = title
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.Parent = titleBar

    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, 0, 1, -30)
    contentFrame.Position = UDim2.new(0, 0, 0, 30)
    contentFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    contentFrame.BorderSizePixel = 0
    contentFrame.Parent = mainFrame

    window.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    return window, mainFrame, titleBar, titleLabel, contentFrame
end

-- Tab

function UI.Tab(title)
    local tab = Instance.new("Frame")
    tab.Name = "Tab"
    tab.Size = UDim2.new(1, 0, 1, 0)
    tab.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tab.BorderSizePixel = 0
    tab.Visible = false

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Text = title
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 14
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.Parent = tab

    return tab, titleLabel
end

-- Button

function UI.Button(text, parent, callback)
    local button = Instance.new("TextButton")
    button.Name = "Button"
    button.Text = text
    button.Size = UDim2.new(0, 150, 0, 30)
    button.Position = UDim2.new(0.5, -75, 0.5, -15)
    button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14
    button.Font = Enum.Font.SourceSansBold
    button.Parent = parent

    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    return button
end

-- Toggle

function UI.Toggle(text, parent, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = "ToggleFrame"
    toggleFrame.Size = UDim2.new(0, 150, 0, 30)
    toggleFrame.Position = UDim2.new(0.5, -75, 0.5, -15)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    toggleFrame.Parent = parent

    local toggleText = Instance.new("TextLabel")
    toggleText.Name = "ToggleText"
    toggleText.Text = text
    toggleText.Size = UDim2.new(0.8, 0, 1, 0)
    toggleText.Position = UDim2.new(0, 0, 0, 0)
    toggleText.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    toggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleText.TextSize = 14
    toggleText.Font = Enum.Font.SourceSansBold
    toggleText.Parent = toggleFrame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Text = default and "ON" or "OFF"
    toggleButton.Size = UDim2.new(0.2, 0, 1, 0)
    toggleButton.Position = UDim2.new(0.8, 0, 0, 0)
    toggleButton.BackgroundColor3 = default and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextSize = 14
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.Parent = toggleFrame

    local isToggled = default

    toggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        toggleButton.Text = isToggled and "ON" or "OFF"
        toggleButton.BackgroundColor3 = isToggled and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
        if callback then
            callback(isToggled)
        end
    end)

    return isToggled, toggleFrame, toggleText, toggleButton
end

-- Slider

function UI.Slider(text, parent, minValue, maxValue, defaultValue, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = "SliderFrame"
    sliderFrame.Size = UDim2.new(0, 150, 0, 30)
    sliderFrame.Position = UDim2.new(0.5, -75, 0.5, -15)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    sliderFrame.Parent = parent

    local sliderText = Instance.new("TextLabel")
    sliderText.Name = "SliderText"
    sliderText.Text = text
    sliderText.Size = UDim2.new(0.8, 0, 1, 0)
    sliderText.Position = UDim2.new(0, 0, 0, 0)
    sliderText.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    sliderText.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderText.TextSize = 14
    sliderText.Font = Enum.Font.SourceSansBold
    sliderText.Parent = sliderFrame

    local sliderValue = Instance.new("TextLabel")
    sliderValue.Name = "SliderValue"
    sliderValue.Text = tostring(defaultValue)
    sliderValue.Size = UDim2.new(0.2, 0, 1, 0)
    sliderValue.Position = UDim2.new(0.8, 0, 0, 0)
    sliderValue.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    sliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderValue.TextSize = 14
    sliderValue.Font = Enum.Font.SourceSansBold
    sliderValue.Parent = sliderFrame

    local sliderBar = Instance.new("Frame")
    sliderBar.Name = "SliderBar"
    sliderBar.Size = UDim2.new(0.7, 0, 0, 10)
    sliderBar.Position = UDim2.new(0.15, 0, 0.5, -5)
    sliderBar.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
    sliderBar.Parent = sliderFrame

    local sliderButton = Instance.new("TextButton")
    sliderButton.Name = "SliderButton"
    sliderButton.Text = ""
    sliderButton.Size = UDim2.new(0, 10, 0, 20)
    sliderButton.Position = UDim2.new((defaultValue - minValue) / (maxValue - minValue), -5, 0.5, -10)
    sliderButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
    sliderButton.Parent = sliderBar

    local isDragging = false

    sliderButton.MouseButton1Down:Connect(function()
        isDragging = true
    end)

    game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mousePosition = input.Position
            local barPosition = sliderBar.AbsolutePosition
            local barSize = sliderBar.AbsoluteSize
            local barLeft = barPosition.X
            local barRight = barPosition.X + barSize.X

            local value = math.clamp((mousePosition.X - barLeft) / (barRight - barLeft), 0, 1)
            local scaledValue = minValue + value * (maxValue - minValue)

            sliderButton.Position = UDim2.new(value, -5, 0.5, -10)
            sliderValue.Text = string.format("%.2f", scaledValue)

            if callback then
                callback(scaledValue)
            end
        end
    end)

    return defaultValue, sliderFrame, sliderText, sliderValue
end

-- Dropdown

function UI.Dropdown(options, parent, defaultIndex, callback)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Name = "DropdownFrame"
    dropdownFrame.Size = UDim2.new(0, 150, 0, 30)
    dropdownFrame.Position = UDim2.new(0.5, -75, 0.5, -15)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    dropdownFrame.ClipsDescendants = true
    dropdownFrame.Parent = parent

    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Name = "DropdownButton"
    dropdownButton.Text = options[defaultIndex] or "Select"
    dropdownButton.Size = UDim2.new(1, 0, 1, 0)
    dropdownButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownButton.TextSize = 14
    dropdownButton.Font = Enum.Font.SourceSansBold
    dropdownButton.Parent = dropdownFrame

    local dropdownList = Instance.new("ScrollingFrame")
    dropdownList.Name = "DropdownList"
    dropdownList.Size = UDim2.new(1, 0, 0, 0)
    dropdownList.Position = UDim2.new(0, 0, 1, 0)
    dropdownList.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    dropdownList.BorderSizePixel = 0
    dropdownList.Visible = false
    dropdownList.ClipsDescendants = true
    dropdownList.ScrollBarThickness = 0
    dropdownList.Parent = dropdownFrame

    local listLayout = Instance.new("UIListLayout")
    listLayout.Name = "ListLayout"
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Parent = dropdownList

    local selectedOptionIndex = defaultIndex

    local function updateDropdownButton()
        dropdownButton.Text = options[selectedOptionIndex] or "Select"
    end

    local function updateDropdownList()
        dropdownList.CanvasSize = UDim2.new(1, 0, 0, #options * 30)
        dropdownList.Visible = not dropdownList.Visible
    end

    local function selectOption(index)
        selectedOptionIndex = index
        updateDropdownButton()
        updateDropdownList()
        if callback then
            callback(selectedOptionIndex)
        end
    end

    for i, optionText in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Name = "OptionButton"
        optionButton.Text = optionText
        optionButton.Size = UDim2.new(1, 0, 0, 30)
        optionButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        optionButton.TextSize = 14
        optionButton.Font = Enum.Font.SourceSansBold
        optionButton.Parent = dropdownList

        optionButton.MouseButton1Click:Connect(function()
            selectOption(i)
        end)
    end

    dropdownButton.MouseButton1Click:Connect(function()
        updateDropdownList()
    end)

    return selectedOptionIndex, dropdownFrame, dropdownButton, dropdownList
end

-- Colorpicker

function UI.Colorpicker(parent, defaultColor, callback)
    local colorpickerFrame = Instance.new("Frame")
    colorpickerFrame.Name = "ColorpickerFrame"
    colorpickerFrame.Size = UDim2.new(0, 150, 0, 30)
    colorpickerFrame.Position = UDim2.new(0.5, -75, 0.5, -15)
    colorpickerFrame.BackgroundColor3 = defaultColor or Color3.new(1, 1, 1)
    colorpickerFrame.Parent = parent

    local colorpickerButton = Instance.new("TextButton")
    colorpickerButton.Name = "ColorpickerButton"
    colorpickerButton.Text = ""
    colorpickerButton.Size = UDim2.new(1, 0, 1, 0)
    colorpickerButton.BackgroundColor3 = defaultColor or Color3.new(1, 1, 1)
    colorpickerButton.Parent = colorpickerFrame

    colorpickerButton.MouseButton1Click:Connect(function()
        local picker = Color3.fromHSV(Color3.toHSV(colorpickerButton.BackgroundColor3))
        picker = picker or Color3.new(1, 1, 1)

        local newColor = Color3.fromHSV(Color3.toHSV(picker))

        if callback then
            callback(newColor)
        end

        colorpickerButton.BackgroundColor3 = newColor
    end)

    return defaultColor, colorpickerFrame, colorpickerButton
end

-- Textbox

function UI.Textbox(text, parent, callback)
    local textboxFrame = Instance.new("Frame")
    textboxFrame.Name = "TextboxFrame"
    textboxFrame.Size = UDim2.new(0, 150, 0, 30)
    textboxFrame.Position = UDim2.new(0.5, -75, 0.5, -15)
    textboxFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    textboxFrame.Parent = parent

    local textbox = Instance.new("TextBox")
    textbox.Name = "Textbox"
    textbox.Text = text
    textbox.Size = UDim2.new(1, 0, 1, 0)
    textbox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textbox.TextSize = 14
    textbox.Font = Enum.Font.SourceSansBold
    textbox.Parent = textboxFrame

    textbox.FocusLost:Connect(function(enterPressed)
        if callback then
            callback(textbox.Text, enterPressed)
        end
    end)

    return text, textboxFrame, textbox
end

-- Bind

function UI.Bind(keyCode, parent, callback)
    local bindFrame = Instance.new("Frame")
    bindFrame.Name = "BindFrame"
    bindFrame.Size = UDim2.new(0, 150, 0, 30)
    bindFrame.Position = UDim2.new(0.5, -75, 0.5, -15)
    bindFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    bindFrame.Parent = parent

    local bindText = Instance.new("TextLabel")
    bindText.Name = "BindText"
    bindText.Text = "Press a key..."
    bindText.Size = UDim2.new(1, 0, 1, 0)
    bindText.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    bindText.TextColor3 = Color3.fromRGB(255, 255, 255)
    bindText.TextSize = 14
    bindText.Font = Enum.Font.SourceSansBold
    bindText.Parent = bindFrame

    local userInputService = game:GetService("UserInputService")

    local isBinding = false

    userInputService.InputBegan:Connect(function(input)
        if isBinding then
            local keyCode = input.KeyCode
            local keyName = userInputService:GetStringForKeyCode(keyCode)
            bindText.Text = keyName
            isBinding = false
            if callback then
                callback(keyCode)
            end
        end
    end)

    bindFrame.MouseButton1Click:Connect(function()
        isBinding = true
        bindText.Text = "Press a key..."
    end)

    return bindFrame, bindText
end

return UI
